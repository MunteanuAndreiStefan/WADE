// <auto-generated />
using System;
using FakeNewsDetectionCache.Entities.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace FakeNewsDetectionCache.Entities.Migrations
{
    [DbContext(typeof(Repository))]
    partial class RepositoryModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("FakeNewsDetectionCache.Entities.Models.ApplicationUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CredibilityScore")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique()
                        .HasFilter("[UserId] IS NOT NULL");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("ApplicationUsers");
                });

            modelBuilder.Entity("FakeNewsDetectionCache.Entities.Models.NewsArticle", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CredibilityScore")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .HasColumnType("nvarchar(450)");

                    b.Property<Guid>("UserId")
                        .HasColumnName("User_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("Source")
                        .IsUnique()
                        .HasFilter("[Source] IS NOT NULL");

                    b.HasIndex("UserId")
                        .HasName("IX_FK_NewsArticeUser");

                    b.ToTable("NewsArticles");
                });

            modelBuilder.Entity("FakeNewsDetectionCache.Entities.Models.TwitterUser", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<int?>("CredibilityScore")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique()
                        .HasFilter("[Username] IS NOT NULL");

                    b.ToTable("TwitterUsers");
                });

            modelBuilder.Entity("FakeNewsDetectionCache.Entities.Models.Vote", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ApplicationUserId")
                        .HasColumnName("ApplicationUser_Id")
                        .HasColumnType("uniqueidentifier");

                    b.Property<bool>("IsTrue")
                        .HasColumnType("bit");

                    b.Property<Guid>("NewsArticleId")
                        .HasColumnName("NewsArticle_Id")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("ApplicationUserId")
                        .HasName("IX_FK_VoteApplicationUser");

                    b.HasIndex("NewsArticleId")
                        .HasName("IX_FK_VoteNewsArticle");

                    b.ToTable("Votes");
                });

            modelBuilder.Entity("FakeNewsDetectionCache.Entities.Models.NewsArticle", b =>
                {
                    b.HasOne("FakeNewsDetectionCache.Entities.Models.TwitterUser", "User")
                        .WithMany("NewsArticles")
                        .HasForeignKey("UserId")
                        .HasConstraintName("FK_NewsArticeUser")
                        .IsRequired();
                });

            modelBuilder.Entity("FakeNewsDetectionCache.Entities.Models.Vote", b =>
                {
                    b.HasOne("FakeNewsDetectionCache.Entities.Models.ApplicationUser", "ApplicationUser")
                        .WithMany("Votes")
                        .HasForeignKey("ApplicationUserId")
                        .HasConstraintName("FK_VoteApplicationUser")
                        .IsRequired();

                    b.HasOne("FakeNewsDetectionCache.Entities.Models.NewsArticle", "NewsArticle")
                        .WithMany("Votes")
                        .HasForeignKey("NewsArticleId")
                        .HasConstraintName("FK_VoteNewsArticle")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
